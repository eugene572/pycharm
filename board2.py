# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestUntitled():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_untitled(self):
    self.driver.get("https://nstaging.daouoffice.com/login")
    self.driver.set_window_size(1187, 812)

    # 로그인 입력 필드에 유저네임 입력
    self.driver.find_element(By.ID, "username").send_keys("yoojin1216")

    # 로그인 입력 필드에 패스워드 입력 후 엔터
    self.driver.find_element(By.ID, "password").send_keys("1qaz2wsx#")
    self.driver.find_element(By.ID, "password").send_keys(Keys.ENTER)

    try:
      # 페이지 로딩을 기다립니다.
      WebDriverWait(self.driver, 10).until(EC.presence_of_element_located((By.LINK_TEXT, "홈")))
      # # "홈" 링크를 클릭합니다.
      # self.driver.find_element(By.LINK_TEXT, "홈").click()
      # time.sleep(3)
      print("로그인에 성공하였습니다")

    except Exception as e:
      # 예외가 발생했을 때 처리할 코드
      print("로그인에 실패했습니다:", e)

    try:
      # 페이지 로딩을 기다립니다.
      # WebDriverWait(self.driver, 10).until(EC.presence_of_element_located((By.LINK_TEXT, "게시판")))

      # "게시판" 링크를 클릭합니다.
      self.driver.find_element(By.LINK_TEXT, "게시판").click()

      # 프레임이 나타날 때까지 대기합니다.
      WebDriverWait(self.driver, 10).until(EC.presence_of_element_located((By.LINK_TEXT, "게시판")))
      print("게시판에 정상적으로 들어왔습니다")

    except Exception as e:
      print("게시판 비정상")

      # self.driver.find_element(By.CSS_SELECTOR, ".board-tree-nodes:nth-child(2) .txt").click()
      # self.driver.find_element(By.CSS_SELECTOR, ".custom_header .btn_tool:nth-child(1) > .txt").click()
      # element = self.driver.find_element(By.CSS_SELECTOR, ".custom_header .btn_tool:nth-child(1) > .txt")
      # actions = ActionChains(self.driver)
      # actions.move_to_element(element).perform()
      # self.driver.find_element(By.ID, "subject").click()
      # self.driver.find_element(By.ID, "subject").send_keys("라라라")
      # self.driver.find_element(By.CSS_SELECTOR, ".btn_major > .txt").click()
      # self.driver.find_element(By.CSS_SELECTOR, ".on .txt").click()
  
