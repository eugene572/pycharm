# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestUntitled():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_untitled(self):
    self.driver.get("https://nstaging.daouoffice.com/login")
    self.driver.set_window_size(1187, 812)

    # 로그인 입력 필드에 유저네임 입력
    self.driver.find_element(By.ID, "username").send_keys("yoojin1216")

    # 로그인 입력 필드에 패스워드 입력 후 엔터
    self.driver.find_element(By.ID, "password").send_keys("1qaz2wsx#")
    self.driver.find_element(By.ID, "password").send_keys(Keys.ENTER)

    try:
      # 페이지 로딩을 기다립니다.
      WebDriverWait(self.driver, 10).until(EC.presence_of_element_located((By.LINK_TEXT, "홈")))
      # # "홈" 링크를 클릭합니다.
      # self.driver.find_element(By.LINK_TEXT, "홈").click()
      # time.sleep(3)
      print("로그인에 성공하였습니다")

    except Exception as e:
      # 예외가 발생했을 때 처리할 코드
      print("로그인에 실패했습니다:", e)

    try:
      WebDriverWait(self.driver, 10).until(EC.presence_of_element_located((By.LINK_TEXT, "게시판")))
      self.driver.find_element(By.LINK_TEXT, "게시판").click()

    except Exception as e:
      # 예외가 발생했을 때 처리할 코드
      print("게시판 창에 실패했습니다:", e)

    try:
      # 게시판 페이지가 로드될 때까지 대기
      WebDriverWait(self.driver, 10).until(EC.presence_of_element_located((By.CSS_SELECTOR, ".board-tree-nodes:nth-child(2) .txt")))
      self.driver.find_element(By.CSS_SELECTOR, ".board-tree-nodes:nth-child(2) .txt").click()
      print("게시판 로드 정상")

    except Exception as e:
      # 예외가 발생했을 때 처리할 코드
      print("게시판 로드 실패", e)

    try:
      # 새 글 쓰기 버튼이 나타날 때까지 대기
      WebDriverWait(self.driver, 10).until(EC.presence_of_element_located((By.LINK_TEXT, "새글쓰기")))
      self.driver.find_element(By.LINK_TEXT, "새글쓰기").click()
      print("새 글 버튼 정상")
    except Exception as e:
      # 예외가 발생했을 때 처리할 코드
      print("새 글 버튼 비정상", e)

    try:
      # 제목 입력란에 텍스트 입력
      self.driver.find_element(By.ID, "subject").click()
      self.driver.find_element(By.ID, "subject").send_keys("rkskekfkakqktk")
      print("제목 입력 정상")
    except Exception as e:
      # 예외가 발생했을 때 처리할 코드
      print("제목 입력 비정상", e)

    try:
      # 글 게시 버튼을 클릭하기 전에 대기
      WebDriverWait(self.driver, 10).until(EC.element_to_be_clickable((By.LINK_TEXT, "HTML")))

      # 글 게시 버튼 클릭
      self.driver.switch_to.frame(0)
      self.driver.find_element(By.LINK_TEXT, "HTML").click()

      # # 대기 후에 나타난 다음 클릭할 디자인 버튼을 찾기 위해 다시 default content로 변경
      # self.driver.switch_to.default_content()
      #
      # # 디자인 버튼을 클릭하기 전에 대기
      # WebDriverWait(self.driver, 10).until(EC.element_to_be_clickable((By.LINK_TEXT, "디자인")))
      #
      # # 디자인 버튼 클릭
      # self.driver.find_element(By.LINK_TEXT, "디자인").click()

      # 글 작성 영역에 내용 입력
      self.driver.switch_to.frame(0)
      self.driver.find_element(By.ID, "dext5_source_editor").send_keys("<p>자동화자동화<br></p>")

      # default content로 다시 변경
      self.driver.switch_to.default_content()

      # 글 작성 완료 버튼 클릭
      WebDriverWait(self.driver, 10).until(EC.element_to_be_clickable((By.CSS_SELECTOR, ".btn_major"))).click()

    except Exception as e:
      # 예외가 발생했을 때 처리할 코드
      print("게시글 실패", e)
  
