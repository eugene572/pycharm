# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestUntitled():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_untitled(self):
    self.driver.get("https://nstaging.daouoffice.com/login")
    self.driver.set_window_size(1187, 812)

    # 로그인 입력 필드에 유저네임 입력
    self.driver.find_element(By.ID, "username").send_keys("yoojin1216")

    # 로그인 입력 필드에 패스워드 입력 후 엔터
    self.driver.find_element(By.ID, "password").send_keys("1qaz2wsx#")
    self.driver.find_element(By.ID, "password").send_keys(Keys.ENTER)

    try:
      # 페이지 로딩을 기다립니다.
      WebDriverWait(self.driver, 10).until(EC.presence_of_element_located((By.LINK_TEXT, "홈")))
      # # "홈" 링크를 클릭합니다.
      # self.driver.find_element(By.LINK_TEXT, "홈").click()
      # time.sleep(3)
      print("로그인에 성공하였습니다")

    except Exception as e:
      # 예외가 발생했을 때 처리할 코드
      print("로그인에 실패했습니다:", e)

    try:
      WebDriverWait(self.driver, 10).until(EC.presence_of_element_located((By.LINK_TEXT, "게시판")))
      self.driver.find_element(By.LINK_TEXT, "게시판").click()

    except Exception as e:
      # 예외가 발생했을 때 처리할 코드
      print("게시판 창에 실패했습니다:", e)

    try:
      # 게시판 페이지가 로드될 때까지 대기
      WebDriverWait(self.driver, 10).until(EC.presence_of_element_located((By.CSS_SELECTOR, ".board-tree-nodes:nth-child(2) .txt")))
      self.driver.find_element(By.CSS_SELECTOR, ".board-tree-nodes:nth-child(2) .txt").click()
      print("게시판 로드 정상")

    except Exception as e:
      # 예외가 발생했을 때 처리할 코드
      print("게시판 로드 실패", e)

    try:
      # 새 글 쓰기 버튼이 나타날 때까지 대기
      WebDriverWait(self.driver, 10).until(EC.presence_of_element_located((By.LINK_TEXT, "새글쓰기")))
      self.driver.find_element(By.LINK_TEXT, "새글쓰기").click()
      print("새 글 버튼 정상")
    except Exception as e:
      # 예외가 발생했을 때 처리할 코드
      print("새 글 버튼 비정상", e)

    try:
        # 제목 입력란에 "가나다라" 입력
        WebDriverWait(self.driver, 10).until(EC.element_to_be_clickable((By.ID, "subject"))).send_keys("가나다라")
        print("제목 정상")
    except Exception as e:
        # 예외가 발생했을 때 처리할 코드
        print("제목 비정상", e)

    try:
        # 공개 범위 설정을 클릭하여 드롭다운 메뉴 표시
        WebDriverWait(self.driver, 10).until(EC.element_to_be_clickable((By.CSS_SELECTOR, "#publicSettingPart > td"))).click()

        # iframe으로 전환
        self.driver.switch_to.frame(0)
        #
        # # iframe 내의 body 요소 클릭
        # WebDriverWait(self.driver, 10).until(EC.element_to_be_clickable((By.CSS_SELECTOR, "body"))).click()
        #
        # # 게시글 내용 입력
        # self.driver.find_element(By.CSS_SELECTOR, "body").send_keys("마바사")
        #
        # # iframe에서 기본 컨텐츠로 전환
        # self.driver.switch_to.default_content()
        #
        # # 고정 옵션을 선택
        # WebDriverWait(self.driver, 10).until(
        #     EC.element_to_be_clickable((By.CSS_SELECTOR, "#stickableOption > td"))).click()
        #
        # # iframe으로 다시 전환
        # self.driver.switch_to.frame(0)
        #
        # # iframe 내의 body 요소 클릭
        # WebDriverWait(self.driver, 10).until(EC.element_to_be_clickable((By.CSS_SELECTOR, "body"))).click()

        # 게시글 내용 입력
        self.driver.find_element(By.CSS_SELECTOR, "body").send_keys("마바사")

        # iframe에서 기본 컨텐츠로 전환
        self.driver.switch_to.default_content()

        # 게시글 게시 버튼 클릭
        WebDriverWait(self.driver, 10).until(EC.element_to_be_clickable((By.CSS_SELECTOR, ".btn_major"))).click()

        print("게시글 정상 작성")

    except Exception as e:
      # 예외가 발생했을 때 처리할 코드
      print("게시글 실패", e)
  
