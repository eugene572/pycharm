# Generated by Selenium IDE

import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
import configparser
import logging

# 로그 작성
# logging.basicConfig(filename='click_logs.log', level=logging.INFO, format='%(asctime)s - %(message)s')
# def __doClick_log(printStr):
#     writeLogger(defaultLogLevel, "'{}' 클릭".format(printStr))
#     sleepTime()

# 대기함수
config = configparser.ConfigParser()
config.read('config.ini')

# 예를 들어, 설정 파일에서 'system' 섹션의 'WAIT_TERM' 값을 읽어올 수 있습니다.
# wait_term = config['system']['WAIT_TERM']
driver = webdriver.Chrome()

def commFunc_goNHome():
    driver.get("https://nstaging.daouoffice.com/login")
    driver.set_window_size(1187, 812)
class login():
    # LINK_TEXT 찾기
    def doFindByLInkText_Click(linkText):
      # 페이지 로딩 기다리는 함수
      WebDriverWait(driver, float(config['system']['WAIT_TERM'])).until(EC.presence_of_element_located((By.LINK_TEXT, linkText)))

      # 클릭 실행 함수
      driver.find_element(By.LINK_TEXT, linkText).click()

      # 로그 작성 함수
      # __doClick_log(printStr)

    # ID
    def doFindByID_Click(targetId):
        WebDriverWait(driver, float(config['system']['WAIT_TERM'])).until(EC.presence_of_element_located((By.ID, targetId)))
        driver.find_element(By.ID, targetId).click()
        # __doClick_log(printStr)

    def doFindByCss_Click(targetCss):
        WebDriverWait(driver, float(config['system']['WAIT_TERM'])).until(EC.presence_of_element_located((By.CSS_SELECTOR, targetCss)))
        driver.find_element(By.CSS_SELECTOR, targetCss).click()
        # __doClick_log(printStr)

    def doFindByName_Click(targetName):
        WebDriverWait(driver, float(config['system']['WAIT_TERM'])).until(EC.presence_of_element_located((By.NAME, targetName)))
        driver.find_element(By.NAME, targetName).click()
        # __doClick_log(printStr)

    def doFindByID_SendData(targetId, inputText):
        WebDriverWait(driver, float(config['system']['WAIT_TERM'])).until(EC.presence_of_element_located((By.ID, targetId)))
        driver.find_element(By.ID, targetId).clear()
        driver.find_element(By.ID, targetId).send_keys(inputText)
        # __doSendData_log(printStr, inputText)

    def doFindByCss_SendData(targetCss, inputText):
        WebDriverWait(driver, float(config['system']['WAIT_TERM'])).until(EC.presence_of_element_located((By.ID, targetCss)))
        driver.find_element(By.CSS_SELECTOR, targetCss).clear()
        driver.find_element(By.CSS_SELECTOR, targetCss).send_keys(inputText)
        # __doSendData_log(printStr, inputText)

    def doFindByCss_SendData(targetName, inputText):
        WebDriverWait(driver, float(config['system']['WAIT_TERM'])).until(EC.presence_of_element_located((By.ID, targetName)))
        driver.find_element(By.NAME, targetName).clear()
        driver.find_element(By.NAME, targetName).send_keys(inputText)
        # __doSendData_log(printStr, inputText)

    # def __doSendData_log(printStr, inputText):
    #     writeLogger(defaultLogLevel, "'{}'에 '{}' 입력".format(printStr, inputText))
    #     sleepTime()

    # 로그인 창으로 가기
    commFunc_goNHome()

    doFindByID_SendData("username", "yoojin1216")
    doFindByID_SendData("password", "1qaz2wsx#")
    driver.find_element(By.ID, "password").send_keys(Keys.ENTER)

    # # 로그인 입력 필드에 유저네임 입력
    # driver.find_element(By.ID, "username").send_keys("yoojin1216")
    #
    # # 로그인 입력 필드에 패스워드 입력 후 엔터
    # driver.find_element(By.ID, "password").send_keys("1qaz2wsx#")
    # driver.find_element(By.ID, "password").send_keys(Keys.ENTER)

    if doFindByLInkText_Click("홈"):
        print("로그인에 성공하였습니다")
    else:
        print("로그인에 실패하였습니다")

    try:
        doFindByID_Click("sessionThumbnail")
        doFindByLInkText_Click("로그아웃")

        print("정상적으로 로그아웃 되었습니다")

    except Exception as e:
        print("로그아웃 실패 : ", e)

    # driver.find_element(By.ID, "sessionThumbnail").click()
    # driver.find_element(By.LINK_TEXT, "로그아웃").click()
